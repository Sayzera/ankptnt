security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'plaintext'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: col_username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            custom_authenticators:
                - App\Security\LoginFormAuthenticator
            lazy: true
#            form_login:
#                enable_csrf: true
#                login_path: app_login
#                check_path: app_login
                
                
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

                

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large# sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        # geri kalan herşey için
        # - { path: ^/duyuru-send-mail/5343rt3244412e1243qe132, roles: PUBLIC_ACCESS }
        - { path: ^/web/hook/whats/app, roles: PUBLIC_ACCESS }
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/whatsapp-business-find-user, roles: PUBLIC_ACCESS }
        - { path: ^/web/hook/whatsapp/result-file-status, roles: PUBLIC_ACCESS }
        - { path: ^/forgot-password, roles: PUBLIC_ACCESS }
        - { path: ^/forgot-password-send, roles: PUBLIC_ACCESS },
        - { path: ^/reset-password, roles: PUBLIC_ACCESS }
        # - { path: ^/send-mail/5343rt3244412e1243qe132, roles: PUBLIC_ACCESS }
        # - { path: ^/get-pati-emplyee, roles: PUBLIC_ACCESS }
        # - { path: ^/company/observation/auto, roles: PUBLIC_ACCESS }
        # - { path: ^/brand/domestic/detail-modal, roles: PUBLIC_ACCESS }
        - { path: ^/, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
